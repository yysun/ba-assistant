{
  "version": 3,
  "sources": ["../pages/_data/project.ts", "../pages/index.tsx"],
  "sourcesContent": ["/**\n * Project Management Module\n * ------------------------\n * Core project file management with dual storage for BA documents.\n * \n * Data Model:\n * - Project: { name, folder?, files: { [filename]: content } }\n * - Default files: project.md, user-story-map.md, etc.\n * \n * Storage:\n * - Primary: localStorage for stateful persistence\n * - Secondary: FileSystem API for on-disk backups (optional)\n * \n * Operations:\n * - createProject: Initialize with default BA templates \n * - saveProject: Sync to both storage layers\n * - loadProject: Restore from localStorage\n */\n\nexport interface Project {\n  name: string;\n  folder?: string;\n  files: {\n    [key: string]: string;\n  };\n}\n\nconst DEFAULT_FILES = [\n  'project.md',\n  'user-story-map.md',\n  'customer-journey-map.md',\n  'page-navigations.md',\n  'page-user-stories.md',\n  'sprint-plan.md'\n];\n\nexport const createProject = (name: string): Project => ({\n  name,\n  files: DEFAULT_FILES.reduce((acc, file) => ({ ...acc, [file]: '' }), {})\n});\n\nexport const saveProject = async (project: Project, dirHandle?: FileSystemDirectoryHandle) => {\n  // Always save to localStorage\n  localStorage.setItem('ba-assistant-project', JSON.stringify(project));\n\n  // If directory handle is provided, save files to the file system\n  if (dirHandle) {\n    try {\n      for (const [filename, content] of Object.entries(project.files)) {\n        const fileHandle = await dirHandle.getFileHandle(filename, { create: true });\n        const writable = await fileHandle.createWritable();\n        await writable.write(content);\n        await writable.close();\n      }\n    } catch (err) {\n      console.error('Error saving files to directory:', err);\n      throw err;\n    }\n  }\n};\n\nexport const loadProject = (): Project | null => {\n  const project = localStorage.getItem('ba-assistant-project');\n  return project ? JSON.parse(project) : null;\n};\n", "/**\n * Business Analyst Assistant Home Page\n * ===================================\n * A dual-pane editor for managing business analysis documents with AI prompts.\n * \n * Key Features:\n * - Resizable split panes for project ideas and topic documents \n * - Tabbed interface for multiple documents\n * - File system integration for saving/loading projects\n * - AI prompt generation with context from selected documents\n * - Dark mode compatible UI\n * \n * Structure:\n * - State: Project data, UI state, selected files, and prompts\n * - View: Split pane layout with header, file selector, and editors\n * - Update: Event handlers for drag resize, content changes, file ops\n * \n * Dependencies:\n * - AppRun for component architecture\n * - File System Access API for directory operations\n * - Project and Prompt services for data management\n */\n\n/// <reference path=\"../types/file-system.d.ts\" />\nimport { app, Component } from 'apprun';\nimport { Project, createProject, loadProject, saveProject } from './_data/project';\nimport { promptService } from './_data/prompts';\n\nconst beautifyLabel = (filename: string) => {\n  return filename\n    .replace('.md', '')\n    .split('-')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n};\n\n// Add these functions before the Component class\nconst verifyPermission = async (dirHandle: FileSystemDirectoryHandle) => {\n  const options: FileSystemPermissionMode = 'readwrite';\n  // Check if we already have permission, if so, return true\n  if ((await dirHandle.queryPermission({ mode: options })) === 'granted') return true;\n  // Request permission if we don't have it\n  if ((await dirHandle.requestPermission({ mode: options })) === 'granted') return true;\n  return false;\n};\n\nexport default class Home extends Component {\n  state = async () => {\n    let project: Project = loadProject();\n    const prompts = await promptService.loadPrompts();\n\n    if (!project) {\n      project = createProject('New Project');\n      saveProject(project);\n    }\n\n    const tabs = Object.keys(project.files)\n      .filter(name => name !== 'project.md');\n\n    return {\n      dragging: false,\n      leftWidth: 30,\n      start: { x: 0, width: 30 },\n      el: null as HTMLElement,\n      container: null as HTMLElement,\n      leftContent: project.files['project.md'] || '',\n      rightContent: project.files[tabs[0]] || '',\n      leftTitle: 'Project Ideas',\n      rightTitle: beautifyLabel(tabs[0]),\n      activeTab: tabs[0],\n      tabs,\n      generating: false,\n      project,\n      selectedFiles: ['project.md'],\n      showFileSelector: false,\n      promptContent: '',\n      prompts // Store loaded prompts in state\n    };\n  }\n\n  view = (state) => {\n    const generatePrompt = () => {\n      const promptName = beautifyLabel(state.activeTab);\n      const prompt = state.prompts?.find(p => p.name === promptName);\n      if (!prompt) {\n        console.error('No matching prompt found:', promptName);\n        return '';\n      }\n\n      const selectedContent = state.selectedFiles\n        .map(file => {\n          const content = state.project.files[file];\n          const tagName = beautifyLabel(file).replace(/\\s+/g, '');\n          return `<${tagName}>\\n${content}\\n</${tagName}>`;\n        })\n        .join('\\n\\n');\n\n      return `${prompt.text}\\n\\nBased on the following files:\\n\\n${selectedContent}\\n\\n`;\n    }\n    if (!state.promptContent) state.promptContent = generatePrompt();\n    return <div class=\"flex flex-col h-screen overflow-hidden\">\n      {/* Header */}\n      <header class=\"bg-white dark:bg-gray-800 shadow-sm text-xs flex-none\">\n        <div class=\"flex items-center justify-between px-6 py-4\">\n          <div class=\"flex-1 flex items-center gap-4\">\n            {state.tabs.map((tab) => (\n              <a $onclick={['setTab', tab]}\n                class={`px-4 py-2 rounded-lg transition-colors ${state.activeTab === tab\n                  ? 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100'\n                  : 'bg-white dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300'\n                  }`}>\n                {beautifyLabel(tab)}\n              </a>\n            ))}\n          </div>\n          <button\n            $onclick=\"selectFolderAndSave\"\n            class=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg\"\n          >\n            Save\n          </button>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <div class=\"flex flex-1 gap-0 select-none overflow-hidden p-6 text-gray-600 dark:text-gray-300 text-xs\" ref={el => state.container = el}>\n        <div class={`flex-none min-w-[200px] overflow-hidden flex flex-col`} style={{\n          width: `${state.leftWidth}%`\n        }}>\n          <h1 >{state.leftTitle}</h1>\n          <textarea\n            class=\"flex-1 w-full resize-none p-2 bg-gray-100 dark:bg-gray-800 outline-none dark:text-gray-100 overflow-y-auto rounded-lg border border-gray-300 dark:border-gray-600\"\n            value={state.leftContent}\n            $oninput={['updateLeft']}\n          ></textarea>\n        </div>\n        <div\n          ref={el => state.el = el}\n          $onpointerdown='drag'\n          $onpointermove='move'\n          $onpointerup='drop'\n          $onpointercancel='drop'\n          class={`w-2 bg-gray-100 dark:bg-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 cursor-col-resize touch-none h-full mx-2 ${state.dragging ? 'bg-gray-300 dark:bg-gray-600' : ''}`}\n        ></div>\n        <div class=\"flex-1 min-w-[200px] overflow-hidden flex flex-col\">\n          <div class=\"flex justify-between items-center\">\n            <h1>{state.rightTitle}</h1>\n            <div class=\"flex gap-2\">\n              <div class=\"relative\">\n                <button\n                  $onclick=\"toggleFileSelector\"\n                  class=\"px-3 py-1 mb-2 bg-gray-500 hover:bg-gray-600 text-white rounded-lg flex items-center gap-1\"\n                >\n                  Select Files ({state.selectedFiles.length})\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </button>\n                {state.showFileSelector && (\n                  <div id=\"file-selector\" class=\"absolute z-20 mt-1 w-48 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\">\n                    <label class=\"flex items-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={state.selectedFiles.includes('project.md')}\n                        $onchange={['toggleFileSelection', 'project.md']}\n                        class=\"mr-2\"\n                      />\n                      Project Ideas\n                    </label>\n                    {state.tabs\n                      .filter(file => file !== state.activeTab)\n                      .map(file => (\n                        <label class=\"flex items-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={state.selectedFiles.includes(file)}\n                            $onchange={['toggleFileSelection', file]}\n                            class=\"mr-2\"\n                          />\n                          {beautifyLabel(file)}\n                        </label>\n                      ))}\n                  </div>\n                )}\n              </div>\n              {/* Copy Button */}\n              <div class=\"relative\">\n                <button\n                  $onclick=\"copyContent\"\n                  class=\"px-3 py-1 mb-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg relative\"\n                  title=\"Copy the prompt\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path d=\"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\" />\n                    <path d=\"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z\" />\n                  </svg>\n                </button>\n              </div>\n              {/* Generate Button */}\n              {/* <button\n                $onclick=\"generate\"\n                disabled={state.generating}\n                class=\"px-3 py-1 mb-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {state.generating ? 'Generating...' : 'Generate'}\n              </button> */}\n            </div>\n          </div>\n          <div class=\"flex-1 flex flex-col\">\n            {/* Prompt Area */}\n            <div class=\"h-1/3 mb-2\">\n              <textarea\n                class=\"w-full h-full resize-none p-2 bg-gray-100 dark:bg-gray-800 outline-none dark:text-gray-100 overflow-y-auto border border-gray-300 dark:border-gray-600 rounded-lg\"\n                value={state.promptContent}\n                placeholder=\"Generated prompt/response will appear here...\"\n                $oninput={['updatePrompt']}\n              ></textarea>\n            </div>\n            {/* Document Area */}\n            <div class=\"h-2/3\">\n              <textarea\n                class=\"w-full h-full resize-none p-2 bg-gray-100 dark:bg-gray-800 outline-none dark:text-gray-100 overflow-y-auto border border-gray-300 dark:border-gray-600 rounded-lg\"\n                value={state.rightContent}\n                $oninput={['updateRight']}\n              ></textarea>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  }\n\n  update = {\n\n    drag: (state, e: PointerEvent) => {\n      const target = e.target as HTMLElement;\n      target.setPointerCapture(e.pointerId);\n      document.body.style.cursor = 'col-resize';\n\n      return {\n        ...state,\n        dragging: true,\n        start: {\n          x: e.pageX,\n          width: state.leftWidth\n        }\n      };\n    },\n\n    move: (state, e: PointerEvent) => {\n      if (!state.dragging || !state.container) return;\n\n      const dx = e.pageX - state.start.x;\n      const containerWidth = state.container.offsetWidth;\n      const deltaPercentage = (dx / containerWidth) * 100;\n      const newLeftWidth = Math.max(20, Math.min(80,\n        state.start.width + deltaPercentage\n      ));\n\n      return { ...state, leftWidth: newLeftWidth };\n    },\n\n    drop: (state, e: PointerEvent) => {\n      if (!state.dragging) return;\n\n      const target = e.target as HTMLElement;\n      target.releasePointerCapture(e.pointerId);\n      document.body.style.cursor = '';\n\n      return {\n        ...state,\n        dragging: false\n      };\n    },\n\n    updateLeft: (state, e: Event) => {\n      const newContent = (e.target as HTMLTextAreaElement).value;\n      if (state.project) {\n        state.project.files['project.md'] = newContent;\n        saveProject(state.project);\n      }\n      return {\n        ...state,\n        leftContent: newContent\n      };\n    },\n\n    updateRight: (state, e: Event) => {\n      const newContent = (e.target as HTMLTextAreaElement).value;\n      if (state.project && state.activeTab) {\n        state.project.files[state.activeTab] = newContent;\n        saveProject(state.project);\n      }\n      return {\n        ...state,\n        rightContent: newContent\n      };\n    },\n\n    setTab: (state, filename: string) => {\n      if (state.project) {\n        state.project.files[state.activeTab] = state.rightContent;\n        saveProject(state.project);\n      }\n\n      return {\n        ...state,\n        activeTab: filename,\n        rightTitle: beautifyLabel(filename),\n        rightContent: state.project?.files[filename] || '',\n        promptContent: '' // Reset prompt content to trigger regeneration\n      };\n    },\n\n    toggleFileSelection: (state, file: string) => {\n      const newSelectedFiles = state.selectedFiles.includes(file)\n        ? state.selectedFiles.filter(f => f !== file)\n        : [...state.selectedFiles, file];\n\n      return {\n        ...state,\n        selectedFiles: newSelectedFiles,\n        // showFileSelector: false,\n        promptContent: '' // Reset prompt content to trigger regeneration\n      };\n    },\n\n    updatePrompt: (state, e: Event) => {\n      const newContent = (e.target as HTMLTextAreaElement).value;\n      return {\n        ...state,\n        promptContent: newContent\n      };\n    },\n\n    copyContent: async (state, e: MouseEvent) => {\n      try {\n        await navigator.clipboard.writeText(state.promptContent);\n\n        const tooltip = document.createElement('div');\n        tooltip.textContent = 'Copied!';\n        tooltip.className = 'absolute top-8 -left-6 px-2 py-1 text-xs bg-gray-800 dark:bg-gray-200 text-white dark:text-gray-800 rounded shadow pointer-events-none z-50 whitespace-nowrap';\n\n        const buttonContainer = (e.target as HTMLElement).closest('.relative');\n        if (buttonContainer) {\n          buttonContainer.appendChild(tooltip);\n          setTimeout(() => tooltip.remove(), 2000);\n        }\n      } catch (err) {\n        console.error('Failed to copy text:', err);\n      }\n    },\n\n    toggleFileSelector: (state) => ({\n      ...state,\n      showFileSelector: !state.showFileSelector\n    }),\n\n    selectFolderAndSave: async (state) => {\n      try {\n        const dirHandle = await window.showDirectoryPicker();\n        const hasPermission = await verifyPermission(dirHandle);\n        \n        if (!hasPermission) {\n          alert('Permission denied to access the selected folder');\n          return state;\n        }\n\n        if (state.project) {\n          // Save current content before saving to files\n          state.project.files['project.md'] = state.leftContent;\n          state.project.files[state.activeTab] = state.rightContent;\n          state.project.folder = dirHandle.name;\n          await saveProject(state.project, dirHandle);\n        }\n      } catch (err) {\n        if (err.name === 'AbortError') {\n          // User cancelled the folder picker\n          return state;\n        }\n        console.error('Failed to save files:', err);\n        alert('Failed to save files: ' + err.message);\n      }\n      return state;\n    },\n\n    save: (state) => {\n      if (state.project) {\n        // Save both left and right content before saving project\n        state.project.files['project.md'] = state.leftContent;\n        state.project.files[state.activeTab] = state.rightContent;\n        saveProject(state.project);\n      }\n    },\n\n    // generate: async (state) => { },\n\n    '@document-click': (state, e: MouseEvent) => {\n      if (!state.showFileSelector) return;\n\n      const target = e.target as HTMLElement;\n      const isInsideSelector = target.closest('#file-selector, button[class*=\"bg-gray-500\"]');\n\n      if (!isInsideSelector) {\n        return {\n          ...state,\n          showFileSelector: false\n        };\n      }\n    }\n  };\n\n  unload = ({ el }) => {\n    if (el) {\n      el.onpointerdown = el.onpointerup = el.onpointermove = el.onpointercancel = null;\n    }\n  };\n}\n\n"],
  "mappings": "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",
  "names": []
}
